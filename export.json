{
  "object": {
    "object": "object",
    "id": "bafyreigr6h3ua54sqobm64usupzdft3chh4ofjvok37qslkb2gjjervdgi",
    "name": "OVN Troubleshooting",
    "icon": {
      "format": "emoji",
      "emoji": "👨‍🍳"
    },
    "archived": false,
    "space_id": "bafyreigkvowvc7achn3t572ulojujtme6gbafdadqipzu34dl6h3ezn6si.8umatjo1wzio",
    "snippet": "Identifying running services on each node\n# pcs status\nContainer bundle set: ovn-dbs-bundle [undercloud-0.ctlplane.redhat.local:8787/rh-osbs/rhosp16-openstack-ovn-northd:pcmklatest]\n   ovn-dbs-bundle-0     (ocf::ovn:ovndb-servers):       Master controller-0\n   ovn-dbs-bundle-1 …",
    "layout": "basic",
    "type": {
      "object": "type",
      "id": "bafyreiarxbdji6amzrnowkgnw6dz3cgo5mp7pgs7vbnttc7fhayhsxhhhe",
      "key": "ot-67f7210ccebba02cb2576fb2",
      "name": "Wikipage",
      "icon": {
        "format": "emoji",
        "emoji": "📘"
      },
      "archived": false,
      "recommended_layout": "basic"
    },
    "blocks": [
      {
        "id": "bafyreigr6h3ua54sqobm64usupzdft3chh4ofjvok37qslkb2gjjervdgi",
        "children_ids": [
          "header",
          "div-67c6ebb3cebba08300dd64e0",
          "div-67c6ebb3cebba08300dd64e1",
          "67c6ebddcebba08300dd64f3",
          "67c6ec2ecebba08300dd64fb",
          "67c6ec62cebba08300dd6501",
          "67c6ec6bcebba08300dd6508",
          "67c6ec84cebba08300dd650f",
          "67c6ecbbcebba08300dd6512",
          "67c6ecc6cebba08300dd652b",
          "67c6eccfcebba08300dd654b",
          "67c6ecdfcebba08300dd654e"
        ],
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop"
      },
      {
        "id": "header",
        "children_ids": [
          "title",
          "featuredRelations"
        ],
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop"
      },
      {
        "id": "div-67c6ebb3cebba08300dd64e0",
        "children_ids": [
          "67c6ea7ecebba08300dd6394",
          "67c6e9e6cebba08300dd62f5",
          "67c6e9e9cebba08300dd62f8",
          "67c6e9f4cebba08300dd630b",
          "67c6ea04cebba08300dd6325",
          "67c6ea09cebba08300dd632c",
          "67c6ea15cebba08300dd632f",
          "67c6ea22cebba08300dd6340",
          "67c6ea2dcebba08300dd6343",
          "67c6ea3bcebba08300dd6360",
          "67c6ea3fcebba08300dd6367",
          "67c6ea46cebba08300dd636a",
          "67c6ea4dcebba08300dd6378",
          "67c6ea51cebba08300dd637b",
          "67c6ea6ccebba08300dd6390",
          "67c6ea8ecebba08300dd6399",
          "67c6ea94cebba08300dd63a0",
          "67c6ea97cebba08300dd63a3",
          "67c6eaa8cebba08300dd63b7"
        ],
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop"
      },
      {
        "id": "div-67c6ebb3cebba08300dd64e1",
        "children_ids": [
          "67c6eab0cebba08300dd63ba",
          "67c6eabdcebba08300dd63da",
          "67c6eac3cebba08300dd63e1",
          "67c6eacccebba08300dd63e4",
          "67c6eadbcebba08300dd6412",
          "67c6eae8cebba08300dd6453",
          "67c6eaeacebba08300dd6456",
          "67c6eb04cebba08300dd646e",
          "67c6eb20cebba08300dd647a",
          "67c6eb33cebba08300dd648f",
          "67c6eb33cebba08300dd6490",
          "67c6eb33cebba08300dd6491",
          "67c6eb33cebba08300dd6492",
          "67c6eb33cebba08300dd6493",
          "67c6eb81cebba08300dd649a",
          "67c6eb8bcebba08300dd649d",
          "67c6eb99cebba08300dd64d0",
          "67c6eba0cebba08300dd64db",
          "67c6eba0cebba08300dd64dc",
          "67c6eba0cebba08300dd64dd",
          "67c6ebbbcebba08300dd64e2"
        ],
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop"
      },
      {
        "id": "67c6ebddcebba08300dd64f3",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "OpenFlow tables can be obtained by Ingress Table + 8 or Egress Table + 40",
          "style": "Paragraph",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ec2ecebba08300dd64fb",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "For a detailed explanation of the OVN (logical) tables you can check the manpage of ovn-northd.",
          "style": "Callout",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ec62cebba08300dd6501",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "DHCP",
          "style": "Header2",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ec6bcebba08300dd6508",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "Unlike in ML2/OVS, OVN serves DHCP locally in the compute nodes. The DHCP requests are sent to ovn-controller and replied according to the DB contents. When a VM starts on a hypervisor, ovn-controller will install flows in table 20 with a controller action",
          "style": "Paragraph",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ec84cebba08300dd650f",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "We can find the right DHCP_Options row in the NB database (Neutron inserts this every time a subnet is created):",
          "style": "Paragraph",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ecbbcebba08300dd6512",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "()[root@controller-1 /]# ovn-nbctl find DHCP_Options external_ids:subnet_id=c35226d1-0984-4887-ad38-750c04fba350\n\n_uuid               : a825bbdb-3de2-4cd2-aa75-11951894c087\ncidr                : \"192.168.30.0/24\"\nexternal_ids        : {\"neutron:revision_number\"=\"0\", subnet_id=\"c35226d1-0984-4887-ad38-750c04fba350\"}\noptions             : {classless_static_route=\"{169.254.169.254/32,192.168.30.2, 0.0.0.0/0,192.168.30.1}\", dns_server=\"{172.16.0.1, 10.0.0.1}\", lease_time=\"43200\", mtu=\"1442\", router=\"192.168.30.1\", server_id=\"192.168.30.1\", server_mac=\"fa:16:3e:95:ec:6f\"}\n\n\n169.254.169.254/32,192.168.30.2 -> static route for Metadata service\n0.0.0.0/0,192.168.30.1 -> Default gateway\n",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ecc6cebba08300dd652b",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "()[root@controller-1 /]# ovn-sbctl find logical_flow external_ids:stage-name=ls_in_dhcp_options\n_uuid               : 542caa72-21de-495f-8ac3-d5a44190ef5a\nactions             : \"reg0[3] = put_dhcp_opts(offerip = 192.168.30.84, classless_static_route = {169.254.169.254/32,192.168.30.2, 0.0.0.0/0,192.168.30.1}, dns_server = {172.16.0.1, 10.0.0.1}, lease_time = 43200, mtu = 1442, netmask = 255.255.255.0, router = 192.168.30.1, server_id = 192.168.30.1); next;\"\nexternal_ids        : {source=\"ovn-northd.c:5413\", stage-name=ls_in_dhcp_options}\nlogical_datapath    : 663fc9ef-edb9-4171-9526-f46264ef091c\nmatch               : \"inport == \\\"b9fa396c-e2ce-4b67-9d21-05cf126ccabf\\\" && eth.src == fa:16:3e:98:8e:ab && ip4.src == 0.0.0.0 && ip4.dst == 255.255.255.255 && udp.src == 68 && udp.dst == 67\"\npipeline            : ingress\npriority            : 100\ntable_id            : 12",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eccfcebba08300dd654b",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "In compute-0 we should be able to see the flow in table 20 (12+8):",
          "style": "Paragraph",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ecdfcebba08300dd654e",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "()[root@compute-0 /]# ovs-ofctl dump-flows br-int |grep 542caa72\n cookie=0x542caa72, duration=715849.154s, table=20, n_packets=0, n_bytes=0, idle_age=65534, hard_age=65534, priority=100,udp,reg14=0x3,metadata=0x2,dl_src=fa:16:3e:98:8e:ab,nw_src=0.0.0.0,nw_dst=255.255.255.255,tp_src=68,tp_dst=67 actions=controller(userdata=00.00.00.02.00.00.00.00.00.01.de.10.00.00.00.63.c0.a8.1e.54.79.0e.20.a9.fe.a9.fe.c0.a8.1e.02.00.c0.a8.1e.01.06.08.ac.10.00.01.0a.00.00.01.33.04.00.00.a8.c0.1a.02.05.a2.01.04.ff.ff.ff.00.03.04.c0.a8.1e.01.36.04.c0.a8.1e.01,pause),resubmit(,21)\n\n",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "title",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "OVN Troubleshooting",
          "style": "Title",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "featuredRelations",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop"
      },
      {
        "id": "67c6ea7ecebba08300dd6394",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop"
      },
      {
        "id": "67c6e9e6cebba08300dd62f5",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "Identifying running services on each node",
          "style": "Header2",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6e9e9cebba08300dd62f8",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "# pcs status\nContainer bundle set: ovn-dbs-bundle [undercloud-0.ctlplane.redhat.local:8787/rh-osbs/rhosp16-openstack-ovn-northd:pcmklatest]\n   ovn-dbs-bundle-0     (ocf::ovn:ovndb-servers):       Master controller-0\n   ovn-dbs-bundle-1     (ocf::ovn:ovndb-servers):       Slave controller-1\n   ovn-dbs-bundle-2     (ocf::ovn:ovndb-servers):       Slave controller-2\n ip-172.17.1.42 (ocf::heartbeat:IPaddr2):       Started controller-0",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6e9f4cebba08300dd630b",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "# pcs resource show ovn-dbs-bundle\n  Resource: ovndb_servers (class=ocf provider=ovn type=ovndb-servers)\n   Attributes: inactive_probe_interval=180000 manage_northd=yes master_ip=172.17.1.42 nb_master_port=6641 sb_master_port=6642\n   Meta Attrs: container-attribute-target=host notify=true\n   Operations: demote interval=0s timeout=50s (ovndb_servers-demote-interval-0s)\n               monitor interval=10s role=Master timeout=60s (ovndb_servers-monitor-interval-10s)\n               monitor interval=30s role=Slave timeout=60s (ovndb_servers-monitor-interval-30s)\n               notify interval=0s timeout=20s (ovndb_servers-notify-interval-0s)\n               promote interval=0s timeout=50s (ovndb_servers-promote-interval-0s)\n               start interval=0s timeout=200s (ovndb_servers-start-interval-0s)\n               stop interval=0s timeout=200s (ovndb_servers-stop-interval-0s)\n",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ea04cebba08300dd6325",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "Executing OVN commands in the cluster",
          "style": "Header2",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ea09cebba08300dd632c",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "Determining which node runs the OVN DBs as master",
          "style": "Paragraph",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ea15cebba08300dd632f",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "$ ansible -b -i /usr/bin/tripleo-ansible-inventory  -m shell -a \"pcs status | grep ovn-dbs-bundle | grep Master\" controller-2\ncontroller-0 | CHANGED | rc=0 >>\n   ovn-dbs-bundle-0     (ocf::ovn:ovndb-servers):       Master controller-0\n",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ea22cebba08300dd6340",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "From the ovn-dbs-bundle-podman-0  container running in this node, we can execute R/W operations into the NB and SB databases",
          "style": "Paragraph",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ea2dcebba08300dd6343",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "[root@controller-0 ~]# podman exec -it ovn-dbs-bundle-podman-0 bash\n()[root@controller-0 /]# ovn-nbctl ls-add ovn_test_lswitch\n()[root@controller-0 /]# ovn-nbctl ls-list | grep ovn_test_lswitch\nf830fc06-3c47-4acf-8912-4c7945c744a3 (ovn_test_lswitch)\n()[root@controller-0 /]# ovn-nbctl ls-del ovn_test_lswitch\n()[root@controller-0 /]# ovn-nbctl ls-list | grep -c ovn_test_lswitch\n0\n",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ea3bcebba08300dd6360",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "Executing OVN commands in the cluster",
          "style": "Header2",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ea3fcebba08300dd6367",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "We can also run commands from a non-master node but we need the VIP of the service",
          "style": "Paragraph",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ea46cebba08300dd636a",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "[root@controller-2 ~]# ovs-vsctl get Open_Vswitch . external_ids:ovn-remote | cut -d':' -f 2\n172.17.1.42\n",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ea4dcebba08300dd6378",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "We will now use the above IP address to run commands inside the ovn-dbs-bundle-podman-xcontainer",
          "style": "Paragraph",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ea51cebba08300dd637b",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "()[root@controller-2 /]# ovn-nbctl --db=\"tcp:172.17.1.42:6641\" ls-add ovn_test_lswitch\n()[root@controller-2 /]# ovn-nbctl --db=\"tcp:172.17.1.42:6641\" ls-del ovn_test_lswitch\n()[root@controller-2 /]# ovn-sbctl --db=\"tcp:172.17.1.42:6642\" chassis-add ovn_test_chassis geneve 127.0.0.1\n()[root@controller-2 /]# ovn-sbctl --db=\"tcp:172.17.1.42:6642\" chassis-del ovn_test_chassis\n",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ea6ccebba08300dd6390",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "By default,  TCP port 6641 and 6642 are used for OVN NB and SB respectively",
          "style": "Callout",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ea8ecebba08300dd6399",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "OVN DBs summary",
          "style": "Header2",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ea94cebba08300dd63a0",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "By checking the NB database we can see the logical elements",
          "style": "Paragraph",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ea97cebba08300dd63a3",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "()[root@controller-0 /]# ovn-nbctl show\n[...]\nrouter 1ec0773e-3337-47c1-9795-06ac8c7ecabb (neutron-efed639f-560e-442b-8d22-f0d3911205df) (aka router1)\n    port lrp-8506ae24-9471-4f0f-974a-bbd3b1d3b969  <- private1 subnet interface\n        mac: \"fa:16:3e:ee:35:9b\"\n        networks: [\"192.168.30.1/24\"]            \n    port lrp-93b49ece-2dbc-4fcc-84cb-e7afd482a12e  <- public subnet interface\n        mac: \"fa:16:3e:8c:77:99\"\n        networks: [\"10.0.0.116/24\"]  \n        gateway chassis: [43d98571-ccd6-48ce-bf4f-08f24aeed522 0444b1f1-e9a9-4a73-ba78-997c87e61795 fe8f9887-27ef-4724-8cfc-50ec6e3d4a98]\n    port lrp-a1ce88e2-5698-44e7-9651-daa7fdca6c30  <- private2 subnet interface\n        mac: \"fa:16:3e:1b:4c:16\"\n        networks: [\"192.168.40.1/24\"]\n    nat 183cb3c4-2f56-44e0-a6f3-475deb1a7c06       <- Floating IP\n        external ip: \"10.0.0.173\"\n        logical ip: \"192.168.40.220\"\n        type: \"dnat_and_snat\"   \n    nat 3c0add97-0d5f-4d1d-8ffc-7899e8ba8ab1       <- SNAT rule for private1 subnet\n        external ip: \"10.0.0.116\"\n        logical ip: \"192.168.30.0/24\"\n        type: \"snat\"\n    nat 43dc9430-b6e6-48aa-ad8a-8792e0a78d86       <- Floating IP\n        external ip: \"10.0.0.172\"\n        logical ip: \"192.168.40.166\"\n        type: \"dnat_and_snat\"\n    nat 92ce7038-6563-44f7-a0c2-0deaea2338ce       <- Floating IP\n        external ip: \"10.0.0.170\"\n        logical ip: \"192.168.30.84\"\n        type: \"dnat_and_snat\"\n    nat d0a87517-b7a3-4a6c-9307-9b178307fca0      <- SNAT rule for private2 subnet\n        external ip: \"10.0.0.116\"\n        logical ip: \"192.168.40.0/24\"\n        type: \"snat\"\n",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eaa8cebba08300dd63b7",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "By checking the SB database we can tell where the logical elements are physically located",
          "style": "Paragraph",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eab0cebba08300dd63ba",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "()[root@controller-0 /]# ovn-sbctl show\n\nChassis \"49017047-3787-4191-9730-fddfc8380a15\"\n    hostname: \"compute-0.redhat.local\"\n    Encap geneve\n        ip: \"172.17.2.93\"\n        options: {csum=\"true\"}\n    Port_Binding \"f4ada4a0-387f-428a-b1b8-b484d32aa795\"  <- private2_vm1 in compute-0   \n    Port_Binding \"b9fa396c-e2ce-4b67-9d21-05cf126ccabf\"  <- private1_vm1 in compute-0\nChassis \"fc6db124-5639-4b22-84c1-aafe472b40f7\"\n    hostname: \"compute-1.redhat.local\"\n    Encap geneve\n        ip: \"172.17.2.92\"\n        options: {csum=\"true\"}\n    Port_Binding \"b34b73d9-0002-477b-9a92-392d3e2cb15c\"  <- private1_vm2 in compute-1\n    Port_Binding \"4a406363-ca36-4a00-bd78-8f21cd50dc32\"  <- private2_vm2 in compute-1\nChassis \"43d98571-ccd6-48ce-bf4f-08f24aeed522\"\n    hostname: \"controller-2.redhat.local\"\n    Encap geneve\n        ip: \"172.17.2.10\"\n        options: {csum=\"true\"}\n    Port_Binding \"cr-lrp-93b49ece-2dbc-4fcc-84cb-e7afd482a12e\"      <- Gateway port in controller-2 (SNAT traffic)\n\n[...]\n",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eabdcebba08300dd63da",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "Neutron SGR → ACL → Logical Flow → OpenFlow",
          "style": "Header2",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eac3cebba08300dd63e1",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "We can trace a Neutron Security Group Rule to the OpenFlow(s) installed in the hypervisor by inspecting the ACL (NB) and the associated Logical Flows (SB) objects",
          "style": "Paragraph",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eacccebba08300dd63e4",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "(overcloud) [stack@undercloud-0 ~]$ openstack security group rule list\n+--------------------------------------+-------------+-----------+-----------+------------+--------------------------------------+--------------------------------------+\n| ID                                   | IP Protocol | Ethertype | IP Range  | Port Range | Remote Security Group                | Security Group                       |\n+--------------------------------------+-------------+-----------+-----------+------------+--------------------------------------+--------------------------------------+\n| 596e353b-6a68-4100-8815-674c09759fd6 | tcp         | IPv4      | 192.168.13.240/30 | 9999:9999  | None                                 | a7150ec3-60ec-440f-950a-0ef3037bfdc6 |\n\n()[root@controller-2 /]# ovn-nbctl find ACL external_ids:\"neutron\\:security_group_rule_id\"=596e353b-6a68-4100-8815-674c09759fd6\n_uuid               : 59ec7790-7d9c-4f41-bf27-4b00670d23d3\naction              : allow-related\ndirection           : to-lport\nexternal_ids        : {\"neutron:security_group_rule_id\"=\"596e353b-6a68-4100-8815-674c09759fd6\"}\nlabel               : 0\nlog                 : false\nmatch               : \"outport == @pg_a7150ec3_60ec_440f_950a_0ef3037bfdc6 && ip4 && ip4.src == 192.168.13.240/30 && tcp && tcp.dst == 9999\"\npriority            : 1002\n",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eadbcebba08300dd6412",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "()[root@controller-2 /]# ovn-sbctl find Logical_Flow external_ids:stage-hint=59ec7790\n_uuid               : bcedeade-d2fb-48c4-95b4-8a0f206fb94f\nactions             : \"next;\"\nexternal_ids        : {source=\"northd.c:6108\", stage-hint=\"59ec7790\", stage-name=ls_out_acl}\nlogical_datapath    : 1ca12790-5019-4488-af4c-911b1f998b98\nmatch               : \"reg0[8] == 1 && (outport == @pg_a7150ec3_60ec_440f_950a_0ef3037bfdc6 && ip4 && ip4.src == 192.168.13.240/30 && tcp && tcp.dst == 9999)\"\npipeline            : egress\npriority            : 2002\ntable_id            : 4\nhash                : 0\n\n_uuid               : 8a4a7cf1-5082-4cd8-8182-77d0770d9050\nactions             : \"reg0[1] = 1; next;\"\nexternal_ids        : {source=\"northd.c:6084\", stage-hint=\"59ec7790\", stage-name=ls_out_acl}\nlogical_datapath    : 1ca12790-5019-4488-af4c-911b1f998b98\nmatch               : \"reg0[7] == 1 && (outport == @pg_a7150ec3_60ec_440f_950a_0ef3037bfdc6 && ip4 && ip4.src == 192.168.13.240/30 && tcp && tcp.dst == 9999)\"\npipeline            : egress\npriority            : 2002\ntable_id            : 4\nhash                : 0\n",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eae8cebba08300dd6453",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "Now in any of our compute nodes we can verify the OpenFlow(s) associated to this Security Group rule",
          "style": "Paragraph",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eaeacebba08300dd6456",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "[root@compute-0 ~]# for i in bcedeade 8a4a7cf1 ;do ovs-ofctl dump-flows br-int |grep $i; done\n cookie=0xbcedeade, duration=139729.046s, table=44, n_packets=0, n_bytes=0, idle_age=65534, hard_age=65534, priority=2002,tcp,reg0=0x100/0x100,reg15=0x3,metadata=0x8,nw_src=192.168.13.240/30,tp_dst=9999 actions=resubmit(,45)\n cookie=0x8a4a7cf1, duration=139729.083s, table=44, n_packets=0, n_bytes=0, idle_age=65534, hard_age=65534, priority=2002,tcp,reg0=0x80/0x80,reg15=0x3,metadata=0x8,nw_src=192.168.13.240/30,tp_dst=9999 actions=load:0x1->NXM_NX_XXREG0[97],resubmit(,45)\n\n[root@compute-0 ~]# ovs-ofctl dump-flows br-int table=65 |grep 'reg15=0x3,metadata=0x8'\n\n[root@compute-0 ~]# ovs-ofctl show br-int\n",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eb04cebba08300dd646e",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "reg15=0x3,metadata=0x8 : csl-log-redhat-0 (192.168.13.109) bound to compute-0",
          "style": "Callout",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eb20cebba08300dd647a",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "ovn-trace",
          "style": "Header2",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eb33cebba08300dd648f",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "ovn-trace works by reading the Logical_Flow and other tables from the OVN Southbound  database.",
          "style": "Marked",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eb33cebba08300dd6490",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "It simulates a packet’s path through logical networks by repeatedly looking it up in the logical flow table, following the entire tree of possibilities.",
          "style": "Marked",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eb33cebba08300dd6491",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "ovn-trace simulates only the OVN logical network. It does not simulate the physical elements on which the logical network  is  layered.",
          "style": "Marked",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eb33cebba08300dd6492",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "If the ovn-trace output looks correct for a given network flow but it doesn’t work in reality, we need to troubleshoot further into the physical layout.",
          "style": "Marked",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eb33cebba08300dd6493",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "When run with the --ovs option, ovn-trace will try to pull the associated OVS flows installed in the bridge by ovn-controller printing the OpenFlow rules for every stage. This will require to run the command in the hypervisor we’re interested.",
          "style": "Marked",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eb81cebba08300dd649a",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "Let’s explore ICMP traffic between two guests",
          "style": "Paragraph",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eb8bcebba08300dd649d",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "()[root@compute-0 /]# ovn-trace --db=\"tcp:172.17.1.42:6642\" --ovs --friendly-names --ct=new private2  'inport == \"4a406363-ca36-4a00-bd78-8f21cd50dc32\" && eth.src == fa:16:3e:5d:87:18 && eth.dst == fa:16:3e:49:85:94 && ip4.src == 192.168.40.220 && ip4.dst == 192.168.40.166 && ip.ttl == 64 && icmp4.type == 8'\n\n#icmp,reg14=0x3,vlan_tci=0x0000,dl_src=fa:16:3e:98:8e:ab,dl_dst=fa:16:3e:aa:5d:92,nw_src=192.168.30.84,nw_dst=192.168.30.159,nw_tos=0,nw_ecn=0,nw_ttl=64,icmp_type=8,icmp_code=0\n\ningress(dp=\"private2\", inport=\"private2_vm2\")\n---------------------------------------------\n[...]\n 4. ls_out_acl (ovn-northd.c:4549): !ct.new && ct.est && !ct.rpl && ct_label.blocked == 0 && (outport == @pg_f3c36401_fbe6_4df5_8973_8b701e986fa6 && ip4 && ip4.src == 0.0.0.0/0 && icmp4), priority 2002, uuid f3db6f43\n    cookie=0xf3db6f43, duration=705499.023s, table=44, n_packets=130, n_bytes=12740, priority=2002,ct_state=-new+est-rpl+trk,ct_label=0/0x1,icmp,reg15=0x3,metadata=0x3 actions=resubmit(,45)\n    next;\n\n[...]\n 9. ls_out_port_sec_l2 (ovn-northd.c:4081): outport == \"private2_vm1\" && eth.dst == {fa:16:3e:49:85:94}, priority 50, uuid 060cf739\n    cookie=0x60cf739, duration=705499.025s, table=49, n_packets=4094, n_bytes=428295, priority=50,reg15=0x3,metadata=0x3,dl_dst=fa:16:3e:49:85:94 actions=resubmit(,64)\n    output;\n    /* output to \"private2_vm1\", type \"\" */\n",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eb99cebba08300dd64d0",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "Physical flows",
          "style": "Header2",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eba0cebba08300dd64db",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "Let’s explore an ICMP packet delivered to private2_vm2 on its compute node.",
          "style": "Marked",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eba0cebba08300dd64dc",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "We will ping between two guests and we expect the packet being delivered on the right tap interface. We’ll monitor the flow and assert that it is being hit by checking the n_packets field on table 65.",
          "style": "Marked",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6eba0cebba08300dd64dd",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "In the manpage of ovn-architecture you can see that table 65 performs the translation between logical port to a physical port and the traffic is output in that table**",
          "style": "Paragraph",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      },
      {
        "id": "67c6ebbbcebba08300dd64e2",
        "children_ids": null,
        "background_color": "",
        "align": "AlignLeft",
        "vertical_align": "VerticalAlignTop",
        "text": {
          "text": "[root@compute-0 /]# ovs-ofctl show br-int|grep tapf4ada4a0\n 113(tapf4ada4a0-38): addr:fe:16:3e:49:85:94\n\n\n[root@compute-0 ~]# watch -d -n1 \"ovs-ofctl dump-flows br-int table=65 | grep 'output:113'\"\ncookie=0x0, duration=706084.536s, table=65, n_packets=4111, n_bytes=429849, idle_age=11, hard_age=65534, priority=100,reg15=0x3,metadata=0x3 actions=output:113",
          "style": "Code",
          "checked": false,
          "color": "",
          "icon": {
            "format": ""
          }
        }
      }
    ],
    "properties": [
      {
        "id": "tag",
        "name": "Tag",
        "format": "multi_select",
        "multi_select": [
          {
            "id": "bafyreiejvlxirhv5eincvi55kfizj5n24xg453rt5yfce7lxzhm2gqoati",
            "name": "blog",
            "color": "ice"
          },
          {
            "id": "bafyreidmgqopaugezajflgymvhjv62oyxkamjl2xtfjbigagk5tysxbooq",
            "name": "redhat",
            "color": "pink"
          },
          {
            "id": "bafyreickoc7ydciq6dzinmmlsa36wmtsfbnpixc5eu3f6xo3trizypn4vi",
            "name": "openstack",
            "color": "yellow"
          },
          {
            "id": "bafyreictlnbcq6nlv2pmah2frbxute6vofq6dogdxvwjrq3py5sllv7kqe",
            "name": "it",
            "color": "teal"
          },
          {
            "id": "bafyreigi6wzbq3x7serfcouq7sw7exgtotnbpamecebhtalecosxlqutsu",
            "name": "published",
            "color": "pink"
          }
        ]
      },
      {
        "id": "created_date",
        "name": "Created Date",
        "format": "date",
        "date": "2025-03-04T11:53:52Z"
      },
      {
        "id": "created_by",
        "name": "Created By",
        "format": "object",
        "object": [
          "_participant_bafyreigkvowvc7achn3t572ulojujtme6gbafdadqipzu34dl6h3ezn6si_8umatjo1wzio_A8pf6zC7gzoqyGjEeCU9eNp4u2ZrWhjBtevAVrsDorxbB582"
        ]
      },
      {
        "id": "last_modified_date",
        "name": "Last modified date",
        "format": "date",
        "date": "2025-04-14T18:15:33Z"
      },
      {
        "id": "last_modified_by",
        "name": "Last modified by",
        "format": "object",
        "object": [
          "_participant_bafyreigkvowvc7achn3t572ulojujtme6gbafdadqipzu34dl6h3ezn6si_8umatjo1wzio_A8pf6zC7gzoqyGjEeCU9eNp4u2ZrWhjBtevAVrsDorxbB582"
        ]
      },
      {
        "id": "last_opened_date",
        "name": "Last opened date",
        "format": "date",
        "date": "2025-04-17T07:46:06Z"
      }
    ]
  }
}
