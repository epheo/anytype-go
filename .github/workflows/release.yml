name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Anytype-Go ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
          body: |
            # Anytype-Go ${{ github.ref_name }}
            
            A Go SDK and command-line tool for interacting with the Anytype API to manage spaces, objects, and perform searches.
            
            ## Features
            - Authentication management with automatic token refresh
            - List available spaces
            - Search for objects within spaces
            - Filter searches by object type
            - Colored terminal output
            - Debug mode for API requests
            - Configurable operation timeout
            - Export objects to files in different formats
            
            ## Installation
            
            ### Pre-built Binaries
            Download the appropriate binary for your platform from the assets below.
            
            ### Via Go Install
            ```bash
            go install github.com/epheo/anytype-go@${{ github.ref_name }}
            ```
            
            ## Documentation
            See the [README](https://github.com/epheo/anytype-go/blob/main/README.md) for complete documentation.

  build:
    name: Build Binaries
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            artifact_name: anytype-go-linux-amd64
          - os: linux
            arch: arm64
            artifact_name: anytype-go-linux-arm64
          - os: windows
            arch: amd64
            artifact_name: anytype-go-windows-amd64.exe
          - os: darwin
            arch: amd64
            artifact_name: anytype-go-darwin-amd64
          - os: darwin
            arch: arm64
            artifact_name: anytype-go-darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Build binary
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -v -o ${{ matrix.artifact_name }} ./cmd/anytype-go

      - name: Upload binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./${{ matrix.artifact_name }}
          asset_name: ${{ matrix.artifact_name }}
          asset_content_type: application/octet-stream
